#pragma checksum "C:\Repos\cyberu\Views\Shared\_PasswordsContent.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "706df7cfd4e9d308fa2e6edc307e462ca17588c6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__PasswordsContent), @"mvc.1.0.view", @"/Views/Shared/_PasswordsContent.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Repos\cyberu\Views\_ViewImports.cshtml"
using CyberU;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Repos\cyberu\Views\_ViewImports.cshtml"
using CyberU.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"706df7cfd4e9d308fa2e6edc307e462ca17588c6", @"/Views/Shared/_PasswordsContent.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7c5f4df592f674abd5378c4c73dcb2118f5dc702", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__PasswordsContent : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

    <h3><strong>Secure Passwords</strong></h3>
            



    <section id=""contentArea"">
        <p>
            Strong, complex passwords can help stop cyberthieves from accessing company information. Simple passwords can make access easy. If a cybercriminal figures out your password, it could give them access to the company’s network. Creating unique, complex passwords is essential.
            A strong password contains at least 10 characters and includes numbers, symbols, and capital and lowercase letters. Companies also should ask you to change your passwords on a regular basis. Changing and remembering all of your passwords may be challenging. A password manager can help.
            Companies may also require multi-factor authentication when you try to access sensitive network areas. This adds an additional layer of protection by asking you to take at least one extra step — such as providing a temporary code that is sent to your smartphone — to log in. <sup>1</sup>
        </p>

  ");
            WriteLiteral(@"      <h4>How to Easily Spot a Weak Password <sup>2</sup></h4>
        <p>The secret is to make passwords memorable but hard to guess. Learning a few simple skills will make creating strong memorable passwords easy. Creating them can actually be fun - and your payoff in increased safety is huge.
        To understand the definition of a strong password, it’s best to go over common practices that put millions of users at risk on a daily basis. Let’s look at a few examples of weak passwords to understand why these put you at risk:
            <ul>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    It uses common words, like “Password”<br />
                    <div style=""margin-left: 2%"">The word ""Password"" is the most commonly used password. It’s also pathetically weak - as are ’default’ and ’blank’. These are simple words that can be easily guessed by a user. However, humans aren’t your only concern. Programs that use automated databases can perform a dictionary a");
            WriteLiteral(@"ssault on your system, identifying the password easily.</div>
                </li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    It’s easy to identify, especially if someone knows you well<br />
                    <div style=""margin-left: 2%"">A common example is using a last name + year of birth combination. Marshall1968 - though this example uses 12 characters and includes letters and numbers, it includes both a name that can be associated with you or your family, and other identifying pieces of information such as your birth year, which means it can be easily hacked.</div>
                </li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    It’s short and can be easily deciphered<br />
                    <div style=""margin-left: 2%"">
                        Let’s say you use “F1avoR” as a password, mixing up capital letters and numbers. Here are two important reasons why this password example isn’t safe:
    ");
            WriteLiteral(@"                    <ul>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">It’s too short. A long password is a strong password. The harder a hacker or a code-breaking software application has to work, the better.</li>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">The number of substitutions can be easily guessed. Substituting the number 1 for the letter l is easy to guess for both humans and software.</li>
                        </ul></div>
</li>
            </ul>
            </p>      
        <h4>How to Keep a Strong Password Secure <sup>2</sup></h4>
        <p>So you've settled on a password that's the perfect length, obscure, and mixes letters, numbers, and cases. You're on the right track, but not to total password security just yet.
            <ul>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Don’t reuse your passwords. <br />
                    <div style=""margin-left: 2%"">If");
            WriteLiteral(@" you’re using the same password across email, shopping, and other websites holding sensitive personal data (or even a local community website) and one of those experiences a breach, you’ve now exposed the other services to the risk of being breached as well.</div></li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Don’t write your passwords down.  <br />
                    <div style=""margin-left: 2%"">In can be tempting, especially in the workplace, to keep track of passwords f the old-fashioned way, but these are easily discovered.</div></li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Use a password manager.  <br />
                    <div style=""margin-left: 2%"">There are many apps that store your passwords securely. Webroot SecureAnywhere® Internet Security Plus and Webroot SecureAnywhere® Complete offer a password manager as an additional online security tool.</div></li>
                <li style=""list-styl");
            WriteLiteral(@"e-type: disc; margin-left: 1.5%"">
                    Don’t share your passwords. <br />
                    <div style=""margin-left: 2%"">This one is a no-brainer, and if you must share, change it as soon as possible.</div></li>

            </ul>
        </p>
        <h4>Tips for Creating a Unique Password (That’s Also Strong) <sup>2</sup></h4>
        <p>
                    Short answer: The secret to creating a hard-to-crack password that’s unique and easy to remember is to focus on making it memorable and making it hard to guess. Seems simple enough, right? By learning a few simple skills, you can easily create a strong and memorable password with minimal effort. Plus, creating them can actually be fun - and your payoff in increased safety is huge.
                    To avoid these easy to guess or hack passwords try one or more of the following tricks:
            <ul>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Use a phrase and incorporate shor");
            WriteLiteral(@"tcut codes or acronyms<br />
                    <div style=""margin-left: 2%"">These examples let you use phrases that either means something to you, or you associate with a type of website. For example, the ’all for one and one for all’ may be the password for a social networking site where it’s all about sharing. It could be a phrase about money for a banking site, and so on.
                        <ul>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">
                                2BorNot2B_ThatIsThe? (To be or not to be, that is the question - from Shakespeare)
                            </li>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">
                                L8r_L8rNot2day (Later, later, not today - from the kid's rhyme)
                            </li>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">
                                4Score&7yrsAgo (Four score and seven years ag");
            WriteLiteral(@"o - from the Gettysburg Address)
                            </li>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">
                                John3:16=4G (Scriptural reference)
                            </li>
                            <li style=""list-style-type:circle; margin-left: 1.5%"">
                                14A&A41dumaS (one for all and all for 1 - from The Three Musketeers, by Dumas)
                            </li>
                        </ul>
                    </div>
                </li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Use passwords with common elements, but customized to specific sites<br />
                    <div style=""margin-left: 2%"">
                    These examples tell a story using a consistent style so if you know how you write the first sections, and you’re on the login page for a site you’ll know what to add.
                    •	ABT2_uz_AMZ! (About to use ");
            WriteLiteral(@"Amazon)
                    •	ABT2_uz_BoA! (About to use Bank of America)
                    •	Pwrd4Acct-$$ (Password for account at the bank)
                    •	Pwrd4Acct-Fb (Password for a Facebook account)
                    </div>
                </li>
                <li style=""list-style-type: disc; margin-left: 1.5%"">
                    Play with your keyboard<br />
                    <div style=""margin-left: 2%"">
                    Considering that most computer keyboards contain 101 to 105 keys, you have a ton of options when it comes to crafting a unique password. You don’t have to think of it just as the numbers you see, but rather, as a canvas to draw on.
                    </div>
             </ul>
        </p>
</section>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
